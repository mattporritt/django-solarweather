# Generated by Django 3.2.4 on 2022-02-06 06:35

from django.db import migrations, models
import psqlextra.backend.migrations.operations.add_default_partition
import psqlextra.backend.migrations.operations.create_partitioned_model
import psqlextra.manager.manager
import psqlextra.models.partitioned
import psqlextra.types


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        psqlextra.backend.migrations.operations.create_partitioned_model.PostgresCreatePartitionedModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indoor_temp', models.FloatField()),
                ('outdoor_temp', models.FloatField()),
                ('indoor_feels_temp', models.FloatField()),
                ('outdoor_feels_temp', models.FloatField()),
                ('indoor_dew_temp', models.FloatField()),
                ('outdoor_dew_temp', models.FloatField()),
                ('dew_point', models.FloatField()),
                ('wind_chill', models.FloatField()),
                ('indoor_humidity', models.FloatField()),
                ('outdoor_humidity', models.FloatField()),
                ('wind_speed', models.FloatField()),
                ('wind_gust', models.FloatField()),
                ('wind_direction', models.FloatField()),
                ('absolute_pressure', models.FloatField()),
                ('pressure', models.FloatField()),
                ('rain', models.FloatField()),
                ('daily_rain', models.FloatField()),
                ('weekly_rain', models.FloatField()),
                ('monthly_rain', models.FloatField()),
                ('solar_radiation', models.FloatField()),
                ('uv_index', models.IntegerField()),
                ('date_utc', models.DateTimeField()),
                ('time_stamp', models.IntegerField(db_index=True)),
                ('time_year', models.IntegerField(db_index=True)),
                ('time_month', models.IntegerField(db_index=True)),
                ('time_day', models.IntegerField(db_index=True)),
                ('software_type', models.CharField(max_length=100)),
                ('action', models.CharField(max_length=100)),
                ('real_time', models.IntegerField()),
                ('radio_freq', models.IntegerField()),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            partitioning_options={
                'method': psqlextra.types.PostgresPartitioningMethod['RANGE'],
                'key': ['time_stamp'],
            },
            bases=(psqlextra.models.partitioned.PostgresPartitionedModel,),
            managers=[
                ('objects', psqlextra.manager.manager.PostgresManager()),
            ],
        ),
        psqlextra.backend.migrations.operations.add_default_partition.PostgresAddDefaultPartition(
            model_name='WeatherData',
            name='default',
        ),
    ]
