// @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
"use strict";import{setup}from"./controls.js";class WeatherChartConfig{constructor(){this.config={type:"line",data:{labels:[],datasets:[{backgroundColor:"#c68200",borderColor:"#FF8C00",data:[]}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1}},scales:{x:{grid:{color:"rgb(255, 255, 255, 0.5)"},ticks:{color:"rgb(255, 255, 255)"}},y:{grid:{color:"rgb(255, 255, 255, 0.5)"},ticks:{color:"rgb(255, 255, 255)"}}}}}}}let Chart;const weatherCharts={indoorTemp:{id:"indoor-temp-chart",chartObj:null,dataLabel:"indoor_temp"},outdoorTemp:{id:"outdoor-temp-chart",chartObj:null,dataLabel:"outdoor_temp"}},updateGraphs=(e,t)=>{weatherCharts[e].chartObj.data.labels=t.labels,weatherCharts[e].chartObj.data.datasets[0].data=t.values,weatherCharts[e].chartObj.update()},formatDate=e=>{const t=[];return new Promise(((o,r)=>{e.labels.forEach((e=>{const o=new Date(1e3*e),r=o.getHours()+":"+("0"+o.getMinutes()).substr(-2);t.push(r)})),o({labels:t,values:e.values})}))},formatTrend=e=>{const t=[],o=[];return new Promise(((r,a)=>{e.forEach((e=>{t.push(e[0]),o.push(e[1])})),r({labels:t,values:o})}))},updateDashboard=e=>{const t=document.getElementById("dashboard-indoor-temp-card"),o=t.querySelector(".loading-spinner"),r=t.querySelector(".overlay"),a=t.querySelectorAll(".blur"),n=document.getElementById("dashboard-outdoor-temp-card"),d=n.querySelector(".loading-spinner"),l=n.querySelector(".overlay"),i=n.querySelectorAll(".blur"),s=document.getElementById("dashboard-humidity-card"),m=s.querySelector(".loading-spinner"),u=s.querySelector(".overlay"),y=s.querySelectorAll(".blur"),c=document.getElementById("dashboard-rain-card"),p=c.querySelector(".loading-spinner"),h=c.querySelector(".overlay"),b=c.querySelectorAll(".blur"),g=document.getElementById("indoor-temp-now"),_=document.getElementById("indoor-temp-now-feels-like"),E=document.getElementById("indoor-temp-day-min"),I=document.getElementById("indoor-temp-day-max"),w=document.getElementById("outdoor-temp-now"),F=document.getElementById("outdoor-temp-now-feels-like"),L=document.getElementById("outdoor-temp-day-min"),f=document.getElementById("outdoor-temp-day-max"),x=document.getElementById("indoor-humidity-now"),B=document.getElementById("indoor-humidity-day-min"),T=document.getElementById("indoor-humidity-day-max"),C=document.getElementById("outdoor-humidity-now"),H=document.getElementById("outdoor-humidity-day-min"),M=document.getElementById("outdoor-humidity-day-max"),N=document.getElementById("rain-day"),v=document.getElementById("rain-rate"),q=document.getElementById("rain-week"),S=document.getElementById("rain-month"),j=e.indoor_temp.latest?e.indoor_temp.latest:0,D=e.indoor_feels_temp.latest?e.indoor_temp.latest:0,O=e.outdoor_temp.latest?e.outdoor_temp.latest:0,k=e.outdoor_feels_temp.latest?e.outdoor_feels_temp.latest:0,A=e.indoor_humidity.latest?e.indoor_humidity.latest:0,P=e.outdoor_humidity.latest?e.outdoor_humidity.latest:0,G=(new Date).getHours()+1,W=e.rain.latest/G;g.innerHTML=Number.parseFloat(j).toFixed(1),_.innerHTML=Number.parseFloat(D).toFixed(1),E.innerHTML=Number.parseFloat(e.indoor_temp.daily_min).toFixed(1),I.innerHTML=Number.parseFloat(e.indoor_temp.daily_max).toFixed(1),w.innerHTML=Number.parseFloat(O).toFixed(1),F.innerHTML=Number.parseFloat(k).toFixed(1),L.innerHTML=Number.parseFloat(e.outdoor_temp.daily_min).toFixed(1),f.innerHTML=Number.parseFloat(e.outdoor_temp.daily_max).toFixed(1),x.innerHTML=Number.parseInt(A),B.innerHTML=Number.parseInt(e.indoor_humidity.daily_min),T.innerHTML=Number.parseInt(e.indoor_humidity.daily_max),C.innerHTML=Number.parseInt(P),H.innerHTML=Number.parseInt(e.outdoor_humidity.daily_min),M.innerHTML=Number.parseInt(e.outdoor_humidity.daily_max),N.innerHTML=Number.parseFloat(e.rain.latest).toFixed(1),v.innerHTML=Number.parseFloat(W).toFixed(1),q.innerHTML=Number.parseFloat(e.weekly_rain.latest).toFixed(1),S.innerHTML=Number.parseFloat(e.monthly_rain.latest).toFixed(1);for(const t in weatherCharts)if({}.hasOwnProperty.call(weatherCharts,t)){const o=weatherCharts[t].dataLabel;formatTrend(e[o].daily_trend).then(formatDate).then((e=>{updateGraphs(t,e)}))}o.style.display="none",r.style.display="none",a.forEach((e=>{e.classList.remove("blur")})),d.style.display="none",l.style.display="none",i.forEach((e=>{e.classList.remove("blur")})),m.style.display="none",u.style.display="none",y.forEach((e=>{e.classList.remove("blur")})),p.style.display="none",h.style.display="none",b.forEach((e=>{e.classList.remove("blur")}))},getData=()=>{fetch("/dataajax/").then((e=>e.json())).then((e=>updateDashboard(e)))};export const init=e=>{Chart=e;const t=new WeatherChartConfig;for(const e in weatherCharts)({}).hasOwnProperty.call(weatherCharts,e)&&(weatherCharts[e].chartObj=new Chart(document.getElementById(weatherCharts[e].id),t.config));setup(getData),getData()};