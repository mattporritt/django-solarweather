// @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
"use strict";import{setup}from"./controls.js";const solarCharts={energyBalance:{id:"energy-balance-chart",chartObj:null,dataLabel:"grid_power_usage_real",type:"bar",invert:!0},generation:{id:"solar-generation-chart",chartObj:null,dataLabel:"inverter_ac_power",type:"line",invert:!1}};class SolarChartConfig{constructor(e){this.config={type:e,data:{labels:[],datasets:[{backgroundColor:"#c68200",borderColor:"#FF8C00",data:[]}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{display:!1}},scales:{x:{grid:{color:"rgb(255, 255, 255, 0.5)"},ticks:{color:"rgb(255, 255, 255)"}},y:{grid:{color:"rgb(255, 255, 255, 0.5)"},ticks:{color:"rgb(255, 255, 255)"}}}}}}}let Chart;const updateGraphs=(e,r)=>{solarCharts[e].chartObj.data.labels=r.labels,solarCharts[e].chartObj.data.datasets[0].data=r.values,solarCharts[e].chartObj.update()},formatDate=e=>{const r=[];return new Promise(((t,a)=>{e.labels.forEach((e=>{const t=new Date(1e3*e),a=t.getHours()+":"+("0"+t.getMinutes()).substr(-2);r.push(a)})),t({labels:r,values:e.values})}))},formatTrend=(e,r)=>{const t=[],a=[];return new Promise(((o,n)=>{e.forEach((e=>{t.push(e[0]),r?a.push(-1*e[1]):a.push(e[1])})),o({labels:t,values:a})}))},updateDashboard=e=>{const r=document.getElementById("dashboard-current-usage-card"),t=r.querySelector(".loading-spinner"),a=r.querySelector(".overlay"),o=r.querySelectorAll(".blur"),n=document.getElementById("dashboard-daily-power-card"),l=n.querySelector(".loading-spinner"),s=n.querySelector(".overlay"),d=n.querySelectorAll(".blur"),i=document.getElementById("dashboard-light-card"),c=i.querySelector(".loading-spinner"),u=i.querySelector(".overlay"),p=i.querySelectorAll(".blur"),y=document.getElementById("dashboard-energy-balance-card"),m=y.querySelector(".loading-spinner"),g=y.querySelector(".overlay"),h=y.querySelectorAll(".blur"),b=document.getElementById("dashboard-solar-generation-card"),_=b.querySelector(".loading-spinner"),w=b.querySelector(".overlay"),v=b.querySelectorAll(".blur"),E=document.getElementById("current-usage-now"),f=document.getElementById("current-usage-from-solar"),C=document.getElementById("current-usage-from-grid"),F=document.getElementById("generated-day"),L=document.getElementById("generated-week"),B=document.getElementById("generated-month"),I=document.getElementById("used-day"),x=document.getElementById("used-week"),S=document.getElementById("used-month"),q=document.getElementById("uv-index"),T=document.getElementById("light-intensity"),H=document.getElementById("energy-balance-surplus"),M=e.power_consumption.latest?e.power_consumption.latest:0,j=e.inverter_ac_power.latest?e.inverter_ac_power.latest:0,k=e.grid_power_usage_real.latest?e.grid_power_usage_real.latest:0,N=e.inverter_ac_power.day?e.inverter_ac_power.day:0,D=e.inverter_ac_power.week?e.inverter_ac_power.week:0,O=e.inverter_ac_power.month?e.inverter_ac_power.month:0,A=e.power_consumption.day?e.power_consumption.day:0,P=e.power_consumption.week?e.power_consumption.week:0,G=e.power_consumption.month?e.power_consumption.month:0,R=e.uv_index.latest?e.uv_index.latest:0,z=e.solar_radiation.latest?e.solar_radiation.latest:0,J=Number.parseFloat(M)/1e3,K=Number.parseFloat(j)/1e3,Q=Number.parseFloat(k)/1e3,U=Number.parseFloat(N)/1e3,V=Number.parseFloat(D)/1e3,W=Number.parseFloat(O)/1e3,X=Number.parseFloat(A)/1e3,Y=Number.parseFloat(P)/1e3,Z=Number.parseFloat(G)/1e3,$=U-X;E.innerHTML=J.toFixed(3),f.innerHTML=K.toFixed(3),C.innerHTML=Q.toFixed(3),F.innerHTML=U.toFixed(3),L.innerHTML=V.toFixed(1),B.innerHTML=W.toFixed(1),I.innerHTML=X.toFixed(3),x.innerHTML=Y.toFixed(1),S.innerHTML=Z.toFixed(1),q.innerHTML=R,T.innerHTML=z.toFixed(2),H.innerHTML=$.toFixed(3);for(const r in solarCharts)if({}.hasOwnProperty.call(solarCharts,r)){const t=solarCharts[r].dataLabel;formatTrend(e[t].daily_trend,e[t].invert).then(formatDate).then((e=>{updateGraphs(r,e)}))}t.style.display="none",a.style.display="none",o.forEach((e=>{e.classList.remove("blur")})),l.style.display="none",s.style.display="none",d.forEach((e=>{e.classList.remove("blur")})),c.style.display="none",u.style.display="none",p.forEach((e=>{e.classList.remove("blur")})),m.style.display="none",g.style.display="none",h.forEach((e=>{e.classList.remove("blur")})),_.style.display="none",w.style.display="none",v.forEach((e=>{e.classList.remove("blur")}))},getData=()=>{fetch("/dataajax/?dashboard=solar").then((e=>e.json())).then((e=>updateDashboard(e)))};export const init=e=>{Chart=e;for(const e in solarCharts)if({}.hasOwnProperty.call(solarCharts,e)){const r=new SolarChartConfig(solarCharts[e].type);solarCharts[e].chartObj=new Chart(document.getElementById(solarCharts[e].id),r.config)}setup(getData),getData()};